name: CI/CD - Pipeline DevOps avec Terraform

on:
  push:
    branches:
      - main

jobs:
  sonarqube-analysis:
    name: Analyse SonarQube
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: 🛎️ Checkout du code
        uses: actions/checkout@v4

      - name: 🐳 Démarrer SonarQube
        run: |
          docker run -d --name sonarqube -p 9000:9000 sonarqube:9.9.1-community
          timeout 300 bash -c 'while ! curl -sSf http://localhost:9000/api/system/status | grep -q "\"status\":\"UP\""; do sleep 10; done'

      - name: 🔍 Analyser avec SonarQube
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_HOST_URL: http://localhost:9000

  terraform-deploy:
    name: Déploiement Terraform
    needs: sonarqube-analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: 🛎️ Checkout du code
        uses: actions/checkout@v4

      - name: 🔐 Login Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🏗️ Build et Push Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gestion-trajet:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/gestion-trajet:${{ github.sha }}

      - name: 🖥️ Configurer K3s
        run: |
          curl -sfL https://get.k3s.io | sh -
          mkdir -p $HOME/.kube
          sudo cp /etc/rancher/k3s/k3s.yaml $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config

      - name: ⚙️ Installer Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.5"

      - name: 🚀 Déployer avec Terraform
        working-directory: ./infra
        env:
          TF_VAR_docker_username: ${{ secrets.DOCKER_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_image_tag: ${{ github.sha }}
        run: |
          terraform init
          terraform validate
          terraform apply -auto-approve

      - name: 🔍 Vérifier le déploiement
        run: |
          kubectl get all -n microservice
          echo "Service URL: $(terraform -chdir=infra output -raw service_url)"