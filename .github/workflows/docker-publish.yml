name: CI/CD Complète

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SONAR_HOST_URL: http://localhost:9000
  SONAR_PROJECT_KEY: gestion-trajet-app
  K3S_VERSION: v1.26.5+k3s1
  TERRAFORM_VERSION: 1.5.5
  NAMESPACE: microservice
  DOCKER_REGISTRY: docker.io
  NODE_VERSION: 20

permissions:
  contents: read
  packages: write
  secrets: read  # Permission essentielle

jobs:
  setup-and-test:
    name: "1. Installation et Tests"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Configurer Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Installer les dépendances
        run: npm ci

      - name: Exécuter les tests
        run: npm test

      - name: Vérifier les fichiers
        run: |
          [ -f Dockerfile ] || { echo "❌ Dockerfile manquant"; exit 1; }
          [ -f nginx.conf ] || { echo "❌ nginx.conf manquant"; exit 1; }

  quality-analysis:
    name: "2. Analyse Qualité"
    needs: setup-and-test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Démarrer SonarQube
        run: |
          docker run -d \
            --name sonarqube \
            -p 9000:9000 \
            -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
            sonarqube:9.9.1-community
          sleep 30  # Attente simplifiée

      - name: Exécuter analyse SonarQube
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

  build-and-push:
    name: "3. Construction Docker"
    needs: quality-analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Connexion à Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construire et pousser
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/app:${{ github.sha }}

  deploy:
    name: "4. Déploiement"
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Installer K3s
        run: |
          curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=${{ env.K3S_VERSION }} sh -

      - name: Configurer kubectl
        run: |
          mkdir -p $HOME/.kube
          sudo cp /etc/rancher/k3s/k3s.yaml $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config

      - name: Déployer avec Terraform
        working-directory: ./infra
        env:
          TF_VAR_docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
          TF_VAR_image_tag: ${{ github.sha }}
        run: |
          terraform init
          terraform apply -auto-approve