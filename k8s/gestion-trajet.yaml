apiVersion: v1
kind: Namespace
metadata:
  name: microservice-1

---

# PostgreSQL Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: microservice-1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: microservice-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13-alpine
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: gestion-trajet-secret
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gestion-trajet-secret
              key: DB_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: gestion-trajet-config
              key: DB_NAME
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc

---

# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: db-host
  namespace: microservice-1
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---

# Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: gestion-trajet-config
  namespace: microservice-1
data:
  DB_NAME: "gestion_trajet"
  DB_HOST: "db-host"

---

# Secrets
apiVersion: v1
kind: Secret
metadata:
  name: gestion-trajet-secret
  namespace: microservice-1
type: Opaque
data:
  DB_USER: dHVuaXNidXM=  # tunisbus
  DB_PASSWORD: MDAwMA==  # 0000

---

# Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gestion-trajet-app
  namespace: microservice-1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: gestion-trajet
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gestion-trajet
    spec:
      containers:
      - name: app
        image: mbrabaa2023/microservice-1:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: gestion-trajet-config
        - secretRef:
            name: gestion-trajet-secret
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 45
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 5

---

# Application Service
apiVersion: v1
kind: Service
metadata:
  name: gestion-trajet-service
  namespace: microservice-1
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: gestion-trajet